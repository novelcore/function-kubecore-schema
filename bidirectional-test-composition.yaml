apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xresourcemaps.test.kubecore.io
spec:
  group: test.kubecore.io
  names:
    kind: XResourceMap
    plural: xresourcemaps
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              githubProjectRef:
                type: object
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
            required:
            - githubProjectRef
          status:
            type: object
            properties:
              resourceMap:
                type: object
              conditions:
                type: array
                items:
                  type: object
  claimNames:
    kind: ResourceMap
    plural: resourcemaps

---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: test-bidirectional-discovery
  labels:
    provider: kubecore
    category: test
spec:
  compositeTypeRef:
    apiVersion: test.kubecore.io/v1alpha1
    kind: XResourceMap
  
  mode: Pipeline
  pipeline:
  - step: discover-resources
    functionRef:
      name: function-kubecore-schema
    input:
      apiVersion: context.fn.kubecore.io/v1beta1
      kind: Input
      spec:
        query:
          resourceType: "XGitHubProject"
          requestedSchemas:
            - "kubeCluster"
            - "kubEnv" 
            - "kubeSystem"
            - "githubApp"
            - "app"
  
  - step: create-configmap
    functionRef:
      name: function-kubernetes-provider
    input:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: # Will be set by claim
              namespace: test
            data:
              github-project: # Will be populated
              discovery-timestamp: # Will be populated
              resource-map.json: "{}"  # Will be overwritten
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
          - type: string
            string:
              fmt: "%s-resource-map"
        - type: FromCompositeFieldPath  
          fromFieldPath: spec.githubProjectRef.name
          toFieldPath: spec.forProvider.manifest.data["github-project"]
        - type: FromFunction
          fromFieldPath: context["context.fn.kubecore.io/platform-context"]
          toFieldPath: spec.forProvider.manifest.data["resource-map.json"]
        - type: FromFunction
          fromFieldPath: metadata.creationTimestamp
          toFieldPath: spec.forProvider.manifest.data["discovery-timestamp"]