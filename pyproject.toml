[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "function-function-kubecore-schema"
description = 'A Crossplane composition function that resolves Kubecore App context (Python)'
readme = "README.md"
requires-python = ">=3.11,<3.14"
license = "Apache-2.0"
keywords = []
authors = [{ name = "Novelcore", email = "opensource@novelcore.io" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
]

dependencies = [
  "crossplane-function-sdk-python==0.9.0",
  "click==8.2.1",
  "grpcio==1.74.0",
  "protobuf==6.31.1",
  "kubernetes==29.0.0",
]

dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/novelcore/function-function-kubecore-schema#readme"
Issues = "https://github.com/novelcore/function-function-kubecore-schema/issues"
Source = "https://github.com/novelcore/function-function-kubecore-schema"

[project.scripts]
function = "function.main:cli"

[tool.hatch.build.targets.wheel]
packages = ["function"]

[tool.hatch.version]
path = "function/__version__.py"
validate-bump = false            # Allow going from 0.0.0.dev0+x to 0.0.0.dev0+y.

[tool.hatch.envs.default]
type = "virtual"
path = ".venv-default"
dependencies = [
  "ipython==9.4.0",
  "pytest==8.4.1",
  "pytest-asyncio==1.1.0",
  "psutil==7.0.0",
]

[tool.hatch.envs.default.scripts]
development = "python function/main.py --insecure --debug"

# Test environment configuration
[tool.hatch.envs.hatch-test]
dependencies = [
  "pytest==8.4.1",
  "pytest-asyncio==1.1.0", 
  "pytest-randomly==3.16.0",
  "psutil==7.0.0",
]

# This special environment is used by hatch fmt.
[tool.hatch.envs.hatch-static-analysis]
dependencies = ["ruff==0.12.8"]
config-path = "none"           # Disable Hatch's default Ruff config.

[tool.ruff]
target-version = "py311"
exclude = ["function/proto/*", "validate_*.py"]

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "ASYNC",
  "B",
  "C",
  "D",
  "DTZ",
  "E",
  "EM",
  "ERA",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = ["ISC001"] # Ruff warns this is incompatible with ruff format.

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"] # Don't require docstrings for tests.

[tool.ruff.lint.isort]
known-first-party = ["function"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pep8-naming]
# gRPC requires this PascalCase function name.
extend-ignore-names = ["RunFunction"]

# Pytest configuration
[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "asyncio: marks tests as requiring asyncio",
]
